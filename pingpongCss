#include <iostream>
#include <thread>
#include <mutex>
#include <chrono>
#include <condition_variable>

using namespace std;
condition_variable condition_;
mutex mutex_;
bool is_ping = false;


void in_ping(int limitador)
{
    unique_lock<mutex> lock(mutex_);
    for (int i = 0; i < limitador; i++)
    {

        condition_.wait(lock,[]{ return is_ping?true:false;});
        cout<<"PING"<<endl;
        is_ping = !is_ping;
        condition_.notify_one();
    }
}

void in_pong(int limitador)
{
    unique_lock<mutex> lock(mutex_);
    for (int i = 0; i < limitador; i++)
    {
        condition_.wait(lock,[]{ return !is_ping?true:false;});
        cout<<"PONG"<<endl;
        is_ping = !is_ping;
        condition_.notify_one();
    }
}

int main()
{
    int total_repe = 2;
    thread thread_1(in_ping, total_repe);
    thread thread_2(in_pong, total_repe);
    thread_1.join();
    thread_2.join();
    return 0;
}
